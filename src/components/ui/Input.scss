.input-container {
  position: relative;
  width: 100%;

  input {
    @include bgAndColorTransition(border-color);

    @include whenNight {
      @include defaultTransition(border-color);

      // @include defaultTransition(bac);
    }
    white-space: nowrap;
    &:not([type='password']) {
      text-overflow: ellipsis;
    }
    font-size: 16px;
    border-radius: var(--input-border-radius);
    padding: 0 20px;
    height: var(--input-height);
    width: 100%;
    border: 1px solid var(--c-border-input);
    background-color: transparent;
    // transition: border-color 0.2s ease-out, background-color 0.2s ease-out;
    // @include bgAndColorTransition();

    &::placeholder {
      // transition: color 0.2s ease-out;
      // @include bgAndColorTransition();

      color: var(--color-placeholder);
    }

    &:autofill,
    &:-webkit-autofill-strong-password,
    &:-webkit-autofill-strong-password-viewable,
    &:-webkit-autofill-and-obscured {
      box-shadow: inset 0 0 0 10rem var(--c-surface);
      -webkit-text-fill-color: var(--c-font-primary);

      // border: 1px solid var(--color-neutral); // maybe this
    }

    &:focus {
      outline: none;
      caret-color: var(--c-primary);
      ~ .input-border {
        opacity: 1;
      }
      &::placeholder,
      ~ label,
      ~ .length-indicator {
        color: var(--c-primary);
      }
      ~ .Icon path {
        fill: var(--c-primary);
      }
    }

    &:hover {
      border-color: var(--c-primary);
      ~ label,
      &::placeholder,
      ~ .length-indicator {
        color: var(--c-primary);
      }

      ~ .Icon path,
      .Icon path {
        fill: var(--c-primary);
      }
    }

    &:placeholder-shown ~ label,
    &:focus ~ label {
      transform: scale(0.75) translate(-5px, -35px);
      background-color: var(--c-surface);
    }
  }

  &.fixed-label {
    > label {
      transform: scale(0.75) translate(-5px, -35px);
      background-color: var(--c-surface);
    }
  }

  /* Colors  */
  &.error {
    input {
      caret-color: var(--color-error) !important;
      &::placeholder {
        color: var(--color-error-secondary) !important;
      }
    }

    // input::placeholder,
    .length-indicator,
    label {
      color: var(--color-error) !important;
      font-weight: 500;
    }

    input,
    .input-border,
    input:focus ~ .input-border {
      border-color: var(--color-error) !important;
    }
  }
  // &.success {
  //   /*  */
  // }
  &.loading {
    & .Icon {
      display: none;
    }
  }
  @include withAnimations {
    transition: opacity 0.2s ease-out;

    &:not(.loading) {
      & .Icon {
        animation: show-icon 0.4s ease-out;
      }
      & .input-spinner {
        animation: hide-icon 0.4s ease-out;
      }
    }
    &.loading {
      & .Icon {
        animation: hide-icon 0.4s forwards ease-out;
      }
      & .input-spinner {
        animation: show-icon 0.4s forwards ease-out;
      }
    }
  }

  &:has(input:disabled) {
    opacity: 0.6;
    pointer-events: none;
    border-radius: 12px;
  }
  &.not-empty label {
    transform: scale(0.75) translate(-5px, -35px);
    background-color: var(--c-surface);
  }

  /* Variant */
  &.input-default {
    input {
      border: none;
      border-radius: 0;
      height: initial;
      padding-top: 10px !important;
      padding-bottom: 10px !important;
      &:focus,
      &:hover {
        &::placeholder {
          color: var(--color-placeholder);
        }
      }
    }
  }

  label {
    position: absolute;
    left: 20px;
    top: 13px;
    transform-origin: left center;
    padding: 0px 5px;
    scale: 1;
    color: var(--color-placeholder);
    pointer-events: none;
    // transition: transform 0.2s ease-out, color 0.2s ease-out;

    @include bgAndColorTransition(transform, color);

    white-space: nowrap;
  }

  /* Elements  */
  .input-border {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    border-radius: 12px;
    border: 2px solid var(--c-primary);
    pointer-events: none;
    // transition: opacity 0.2s ease-out;

    @include bgAndColorTransition(border, opacity);
  }
  .length-indicator {
    position: absolute;
    right: 20px;
    top: -8px;
    transform-origin: left center;
    padding: 0px 5px;
    font-size: 14px;
    color: var(--color-placeholder);
    background-color: var(--c-surface);
    @include bgAndColorTransition(color);
  }
  .input-value {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 21px;
  }

  /* Icon  */
  &.end-icon,
  &.start-icon {
    .Icon,
    .input-spinner {
      position: absolute;
      left: auto;
      width: 24px;
      height: 24px;
      top: 25%;
      position: absolute;
      font-size: 16px;
      pointer-events: none;
    }
  }

  &.end-icon {
    input {
      padding: 0 50px 0 20px;
    }
    .Icon,
    .input-spinner {
      right: 20px;
    }
  }

  &.start-icon {
    input {
      padding: 0 40px 0 50px;
    }
    .Icon {
      left: 20px;
    }
  }
}
